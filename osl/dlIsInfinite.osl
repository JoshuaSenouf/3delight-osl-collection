/*
*/
shader dlIsInfinite(
	color inputColor = color(0)
        [[  string help = "Input color that will be used to check if at least one of its channels is an infinite "
                "number, and output the result as the output boolean."
                "<br/><br/>Formula: <b>isinf(input)</b>",
            string label = "Input",
            string widget = "number" ]],
	float inputColorR = 0
        [[  string label = "Input R",
            string widget = "null" ]],
	float inputColorG = 0
        [[  string label = "Input G",
            string widget = "null" ]],
	float inputColorB = 0
        [[  string label = "Input B",
            string widget = "null" ]],
    int useRedChannel = 1
        [[  string help = "Define whether or not the red channel should be affected."
                "<br/><br/>If turned off, the channel will not be taken into account when verifying if at least one "
                "of the channel value is an infinite number, and thus will instead output the value 0 on that "
                "specific channel.",
            string label = "Red",
            string page = "Channels",
            string widget = "checkBox" ]],
    int useGreenChannel = 1
        [[  string help = "Define whether or not the green channel should be affected."
                "<br/><br/>If turned off, the channel will not be taken into account when verifying if at least one "
                "of the channel value is an infinite number, and thus will instead output the value 0 on that "
                "specific channel.",
            string label = "Green",
            string page = "Channels",
            string widget = "checkBox" ]],
    int useBlueChannel = 1
        [[  string help = "Define whether or not the blue channel should be affected."
                "<br/><br/>If turned off, the channel will not be taken into account when verifying if at least one "
                "of the channel value is an infinite number, and thus will instead output the value 0 on that "
                "specific channel.",
            string label = "Blue",
            string page = "Channels",
            string widget = "checkBox" ]],

	output int outBoolean = 0)
{
    color localInputColor = inputColor;

    // We check if anything is connected to the per-channel shader parameters,
    // and if so, we prioritize them over the values coming from the color parameter,
    // and assign them to their respective channels.
    if (isconnected(inputColorR))
        localInputColor[0] = inputColorR;
    if (isconnected(inputColorG))
        localInputColor[1] = inputColorG;
    if (isconnected(inputColorB))
        localInputColor[2] = inputColorB;

    // We are computing each channel individually depending on which the user wants to affect.
    outBoolean = (
        (useRedChannel ? isinf(inputColorR) : 0)
        || (useGreenChannel ? isinf(inputColorG) : 0)
        || (useBlueChannel ? isinf(inputColorB) : 0));
}
