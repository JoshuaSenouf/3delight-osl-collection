#include "../include/dlJSUtils.h"


/*
*/
shader dlJSMix
(
	color i_color1_rgb = color(0.0)
        [[  string help = "First color that will be mixed to the second one to produce the output color."
                "<br/><br/>Formula: <b>mix(color1, color2, mix_level)</b>",
            string label = "Color 1 RGB",
            string widget = "number" ]],
	float i_color1_r = 0.0
        [[  string label = "Color 1 R",
            string widget = "null" ]],
	float i_color1_g = 0.0
        [[  string label = "Color 1 G",
            string widget = "null" ]],
	float i_color1_b = 0.0
        [[  string label = "Color 1 B",
            string widget = "null" ]],
	color i_color2_rgb = color(0.0)
        [[  string help = "Second color that will be mixed to the first one to produce the output color."
                "<br/><br/>Formula: <b>mix(color1, color2, mix_level)</b>",
            string label = "Color 2 RGB",
            string widget = "number" ]],
	float i_color2_r = 0.0
        [[  string label = "Color 2 R",
            string widget = "null" ]],
	float i_color2_g = 0.0
        [[  string label = "Color 2 G",
            string widget = "null" ]],
	float i_color2_b = 0.0
        [[  string label = "Color 2 B",
            string widget = "null" ]],
	float i_mix_level = 0.5
        [[  string help = "Mix level that will control how much the two colors are linearly mixed."
                "<br/><br/>Formula: <b>mix(color1, color2, mix_level)</b>",
            string label = "Level",
            string page = "Mix",
            string widget = "number",
            float min = 0.0,
            float max = 1.0 ]],
    int i_red_channel = 1
        [[  string help = "Define whether or not the red channel should be affected."
                "<br/><br/>If turned off, the channel will instead output the value 0.",
            string label = "Red",
            string page = "Channels",
            string widget = "checkBox" ]],
    int i_green_channel = 1
        [[  string help = "Define whether or not the green channel should be affected."
                "<br/><br/>If turned off, the channel will instead output the value 0.",
            string label = "Green",
            string page = "Channels",
            string widget = "checkBox" ]],
    int i_blue_channel = 1
        [[  string help = "Define whether or not the blue channel should be affected."
                "<br/><br/>If turned off, the channel will instead output the value 0.",
            string label = "Blue",
            string page = "Channels",
            string widget = "checkBox" ]],

	output color outColor = color(0.0),
	output float outColorR = 0.0,
	output float outColorG = 0.0,
	output float outColorB = 0.0
)
{
    color color1_rgb = getComposedColor(i_color1_rgb, i_color1_r, i_color1_g, i_color1_b);
    color color2_rgb = getComposedColor(i_color2_rgb, i_color2_r, i_color2_g, i_color2_b);

    // We are computing each channel individually depending on which the user wants to affect.
    outColor = color(
        i_red_channel ? mix(color1_rgb[0], color2_rgb[0], i_mix_level) : 0.0,
        i_green_channel ? mix(color1_rgb[1], color2_rgb[1], i_mix_level) : 0.0,
        i_blue_channel ? mix(color1_rgb[2], color2_rgb[2], i_mix_level) : 0.0
    );

    outColorR = outColor[0];
    outColorG = outColor[1];
    outColorB = outColor[2];
}
