/*
*/
shader dlReciprocal(
	color inputColor = color(0, 0, 0)
        [[  string help = "Input color that will be used to return its reciprocal, i.e. its multiplicative inverse, "
                " as the output color.<br/><br/>Formula: <b>1 / input</b>",
            string label = "Input",
            string widget = "number" ]],
	float inputColorR = 0
        [[  string label = "Input R",
            string widget = "null" ]],
	float inputColorG = 0
        [[  string label = "Input G",
            string widget = "null" ]],
	float inputColorB = 0
        [[  string label = "Input B",
            string widget = "null" ]],

	output color outColor = color(0, 0, 0),
	output float outColorR = 0,
	output float outColorG = 0,
	output float outColorB = 0)
{
    color localInputColor = inputColor;

    // We check if anything is connected to the per-channel shader parameters,
    // and if so, we prioritize them over the values coming from the color parameter,
    // and assign them to their respective channels.
    if (isconnected(inputColorR))
        localInputColor[0] = inputColorR;
    if (isconnected(inputColorG))
        localInputColor[1] = inputColorG;
    if (isconnected(inputColorB))
        localInputColor[2] = inputColorB;

    outColor = 1/localInputColor;
    outColorR = outColor[0];
    outColorG = outColor[1];
    outColorB = outColor[2];
}
