#include "../include/jsUtils.h"


/*
*/
shader jsIsNan
(
    color i_color_rgb = color(0.0)
        [[  string help = "Color that will be used to check if at least one of its channels is a NaN, "
                "and output the result as the output boolean."
                "<br/><br/>Formula: <b>isnan(color)</b>",
            string label = "Color",
            string widget = "number" ]],
    float i_color_r = 0.0
        [[  string label = "Color R",
            string widget = "null" ]],
    float i_color_g = 0.0
        [[  string label = "Color G",
            string widget = "null" ]],
    float i_color_b = 0.0
        [[  string label = "Color B",
            string widget = "null" ]],
    int i_red_channel = 1
        [[  string help = "Define whether or not the red channel should be affected."
                "<br/><br/>If turned off, the channel will not be taken into account when verifying if at least one "
                "of the channel value is a NaN, and thus will instead output the value 0 on that specific channel.",
            string label = "Red",
            string page = "Channels",
            string widget = "checkBox" ]],
    int i_green_channel = 1
        [[  string help = "Define whether or not the green channel should be affected."
                "<br/><br/>If turned off, the channel will not be taken into account when verifying if at least one "
                "of the channel value is a NaN, and thus will instead output the value 0 on that specific channel.",
            string label = "Green",
            string page = "Channels",
            string widget = "checkBox" ]],
    int i_blue_channel = 1
        [[  string help = "Define whether or not the blue channel should be affected."
                "<br/><br/>If turned off, the channel will not be taken into account when verifying if at least one "
                "of the channel value is a NaN, and thus will instead output the value 0 on that specific channel.",
            string label = "Blue",
            string page = "Channels",
            string widget = "checkBox" ]],

    output int outBoolean = 0
)
{
    color color_rgb = getComposedColor(i_color_rgb, i_color_r, i_color_g, i_color_b);

    // We are computing each channel individually depending on which the user wants to affect.
    outBoolean = (
        (i_red_channel ? isnan(i_color_r) : 0)
        || (i_green_channel ? isnan(i_color_g) : 0)
        || (i_blue_channel ? isnan(i_color_b) : 0)
    );
}
